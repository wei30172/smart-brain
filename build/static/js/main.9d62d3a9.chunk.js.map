{"version":3,"sources":["components/Logo/pooh.png","components/Navigation/Navigation.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","FaceRecognition","imageUrl","box","id","alt","src","width","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmisSignIn","console","log","state","this","htmlFor","type","name","onChange","onSubmitSign","React","Component","Register","Logo","options","max","height","padding","pooh","Rank","ImageLinkForm","onInputChange","onButtonSubmit","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enble","value_area","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","input","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","fetch","json","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9d62d3a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pooh.244817e2.png\";","import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n\tif(isSignedIn) {\r\n\t\treturn (\r\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t<p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t\t<p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n\t\t\t\t<p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n\treturn (\r\n\t\t<div className='center ma'>\r\n\t\t\t<div className='absolute mt2'>\r\n\t\t\t\t<img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/>\r\n\t\t\t\t<div className='bounding-box'style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nclass SignIn extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsignInEmail: '',\r\n\t\t\tsignInPassword: ''\r\n\t\t}\r\n\t}\r\n\t\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({signInEmail: event.target.value})\r\n\t}\r\n\t\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({signInPassword: event.target.value})\r\n\t}\r\n\t\r\n\tonSubmisSignIn = () => {\r\n\t\tconsole.log(this.state);\r\n\t\tthis.props.onRouteChange('home');\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { onRouteChange } = this.props;\r\n\t\treturn (\r\n\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t  <div className=\"measure\">\r\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        \ttype=\"email\" \r\n\t\t\t\t        \tname=\"email-address\"  \r\n\t\t\t\t        \tid=\"email-address\"\r\n\t\t\t\t        \tonChange={this.onEmailChange}\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        \tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        \ttype=\"password\" \r\n\t\t\t\t        \tname=\"password\"  \r\n\t\t\t\t        \tid=\"password\" \r\n\t\t\t\t        \tonChange={this.onPasswordChange}\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </fieldset>\r\n\t\t\t\t    <div className=\"\">\r\n\t\t\t\t      <input\r\n\t\t\t\t      \tonClick={this.onSubmitSign}\r\n\t\t\t\t\t    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n\t\t\t\t\t    type=\"submit\"\r\n\t\t\t\t\t    value=\"sign in\"\r\n\t\t\t\t\t  />\r\n\t\t\t\t    </div>\r\n\t\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t\t      <p onClick={() => onRouteChange('Register')} className=\"f6 link dim black db pointer\">Register</p>\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</main>\t\r\n\t\t</article>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n\treturn (\r\n\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t  <div className=\"measure\">\r\n\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n\t\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mt3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"mv3\">\r\n\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n\t\t\t      </div>\r\n\t\t\t    </fieldset>\r\n\t\t\t    <div className=\"\">\r\n\t\t\t      <input\r\n\t\t\t      \tonClick={() => onRouteChange('home')}\r\n\t\t\t\t    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n\t\t\t\t    type=\"submit\"\r\n\t\t\t\t    value=\"register\"\r\n\t\t\t\t  />\r\n\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</main>\t\r\n\t\t</article>\r\n\t);\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport pooh from './pooh.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t\t<div className='ma4 mt0'>\r\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n\t\t\t {/*<div className=\"Tilt-inner\"> 🐧 </div>*/}\r\n\t\t\t <div className=\"Tilt-inner pd3\">\r\n\t\t\t \t<img style={{padding: '5px'}} alt='logo' src={pooh}/>\r\n\t\t\t </div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='white f3'>\r\n\t\t\t\t{'Winnie, your current rank is ...'}\r\n\t\t\t</div>\r\n\t\t\t<div className='white f1'>\r\n\t\t\t\t{'#5'}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n\treturn (\r\n\t\t<div className='ma4 mt0'>\r\n\t\t\t<p className='f3'>\r\n\t\t\t\t{'This Magic creature will detect faces in your pictures. Give it a try.'}\r\n\t\t\t</p>\r\n\t\t\t<div className='center'>\r\n\t\t\t\t<div className='center form pa4 br3 shadow-5'>\r\n\t\t\t\t\t<input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n\t\t\t\t\t\tonClick={onButtonSubmit}\r\n\t\t\t\t\t>Detact</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ImageLinkForm;","import React, { Component }  from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation.js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js'\nimport SignIn from './components/SignIn/SignIn.js'\nimport Register from './components/Register/Register.js'\nimport Logo from './components/Logo/Logo.js';\nimport Rank from './components/Rank/Rank.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport './App.css';\n\nconst app = new Clarifai.App({\n apiKey: 'ba7f0a99c8dd403baeeddbbd033e5bc7'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enble: true,\n        value_area: 800\n      }\n    }\n  }\n}\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    }\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000')\n    .then(response => response.json())\n    .then(console.log)\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then( response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    } \n    this.setState({route: route});\n  }\n\n  render() {\n    const { imageUrl, box, route, isSignedIn } = this.state;\n    return (\n      <div className='App'>\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        {route === 'home' \n          ? <div>\n              <Logo />\n              <Rank />\n              <ImageLinkForm \n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n          : (\n            route === 'signin'\n            ? <SignIn onRouteChange={this.onRouteChange}/>\n            : <Register onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}